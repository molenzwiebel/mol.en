extern C {
    fn fputs(str: *Char, file: File) -> Int
    fn feof(file: File) -> Int
    fn getline(linep: **Char, linecap: *Long, file: File) -> Long
    fn fflush(file: File) -> Int
}

class IO {
    var in: C:File
    var out: C:File

    def print(str: String) {
        C.fputs(str.pointer, @out)
    }

    def puts(str: String) {
        @print(str + "\n")
    }

    def flush() {
        C.fflush(@out)
    }

    def is_eof() -> Bool {
        C.feof(@in) != 0
    }

    def get_line() -> String {
        buffer = Pointer.malloc(0L) as *Char
        cap = 0L
        len = C.getline(&buffer, &cap, @in)
        if (len > 0) return String.from_cstr(buffer)
        return null
    }

    def close() {
        C.fclose(@in)
        C.fclose(@out)
    }
}
